language: objective-c
osx_image: xcode8.1
xcode_sdk: iphonesimulator10.1
branches:
  only:
  - master
  - develop

env:
  global:
  - SERPENT_PROJECT="Serpent/Serpent.xcodeproj"
  - IOS_FRAMEWORK_SCHEME="Serpent iOS"
  - OSX_FRAMEWORK_SCHEME="Serpent OSX"
  - TVOS_FRAMEWORK_SCHEME="Serpent tvOS"
  - WATCHOS_FRAMEWORK_SCHEME="Serpent watchOS"
  - IOS_SDK=iphonesimulator10.1
  - OSX_SDK=macosx10.12
  - TVOS_SDK=appletvsimulator10.0
  - WATCHOS_SDK=watchsimulator3.1
  matrix:
  - DESTINATION="OS=10.1,name=iPhone 6S Plus"     SCHEME="$IOS_FRAMEWORK_SCHEME"     SDK="$IOS_SDK"     RUN_TESTS="YES" CARTHAGE_PLATFORM="ios"
  - DESTINATION="arch=x86_64"                    SCHEME="$OSX_FRAMEWORK_SCHEME"     SDK="$OSX_SDK"     RUN_TESTS="YES" CARTHAGE_PLATFORM="osx"
  - DESTINATION="OS=10.0,name=Apple TV 1080p"     SCHEME="$TVOS_FRAMEWORK_SCHEME"    SDK="$TVOS_SDK"    RUN_TESTS="YES" CARTHAGE_PLATFORM="tvos"
  - DESTINATION="OS=3.1,name=Apple Watch - 38mm" SCHEME="$WATCHOS_FRAMEWORK_SCHEME" SDK="$WATCHOS_SDK" RUN_TESTS="NO" CARTHAGE_PLATFORM="watchos"

install:
  # Setup carthage dependencies before build
  - carthage bootstrap --platform $CARTHAGE_PLATFORM

script:
  - set -o pipefail

  # Build Framework in Debug and Run Tests if specified
  - if [ $RUN_TESTS == "YES" ]; then
      xcodebuild -project "$SERPENT_PROJECT" -scheme "$SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Debug ONLY_ACTIVE_ARCH=NO clean build test | xcpretty;
    else
      xcodebuild -project "$SERPENT_PROJECT" -scheme "$SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Debug ONLY_ACTIVE_ARCH=NO clean build | xcpretty;
    fi

  # Build in release
  - xcodebuild -project "$SERPENT_PROJECT" -scheme "$SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Release ONLY_ACTIVE_ARCH=NO clean build | xcpretty;

after_success:
- bash <(curl -s https://codecov.io/bash)
notifications:
  slack:
    secure: ieWTXjWNxG8CzgeHpj5q1Rz4/l5pgCT65W0AfL3SdfdLrXv56frhW9bFl5C34HZyhCNijUggSlq2wGUPDuGmZ7tU94HX+3EXWkL0vs4pUcTKF8/rcnyQ2n1t4MzOZKX7MLSJOTGE874fp1d4XoXBT35FIi06hgG1xIXXprKYAxt7bS9kSPpfVxZSlH1N8pHiXJx6oJZU16YsEj7wkuBOgmp21TUQc580mDfAphO2dgdaPcG2A63IgsLrE/MTcUy32Czr9QED0nXA02q8n1EPUgOsJV6qtxz0mxgfL86Kt4VfajapfrHJTdu6sGzdFxy0/VcbZjOQJWCGlPlf9LjC0S4PdPo1iPEXQjrnPGNAjoZ0e0qwQH6/30sWuHuD/2LaLGyRM7bWLtSfYRMKCsXVl54VDGSmP0uVcXPTyGzrz0qoBfw/bQnurFKqnz9PGF+18aqiyk26YXCRWjLBTpWGSHUIiaHS1qL2xUfdnHdiznowoEFnRaWT5FYrZNRN4lVLwJg3OI/UWVGg5AATg90kHPQ06qvaqOqEbfy4ZTwWFbth0866djhaBsoo9NrwwwVVoUUqlCBv413x0Lp3tTNg3AUQvTRz5uJ+HC94/i3/3eEUM2rQUJbgVVfRhxrB8u/rgu37/DTKYMBgARveMn4qY2blpHU22q1mk+YmOLMHSi0=
